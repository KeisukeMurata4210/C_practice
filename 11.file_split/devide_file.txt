ソースとヘッダーファイルに分けられる
ヘッダーファイル：
 関数・変数の宣言のみが記述されたファイル
 拡張子はh
ソースファイル：
 いわゆるソース
 拡張子はc
ソースとヘッダーは一対一で対応させる

宣言には2種類の意味がある。
・コンパイラがその名前と形を記憶する　　　＝狭義の「宣言」
・コンパイラが実際に変数や関数を作成する　＝「定義」
宣言は何度してもよいが、定義が重複すると変数や関数の区別がつかないためエラーになる。

ヘッダファイルで行うプロトタイプ宣言は宣言のみで定義していないため、
ヘッダファイルに記述してもエラーにならなかった。

変数の定義前に「extern」をつける　→ 宣言のみになる


定数が定義されていれば無視され、定義されていなければ # define 以下が実行され定義される
# ifndef 定数名
# define 定数名

処理

# endif